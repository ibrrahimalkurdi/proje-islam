<!DOCTYPE html>
<html lang="ku" dir="rtl">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>پەنێلا کۆنترۆلێ - پرۆژێ ئیسلام</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>
    :root {
        --dark-bg: #0d1117; --card-bg: #161b22; --primary-text: #c9d1d9;
        --secondary-text: #8b949e; --accent-color: #58a6ff; --border-color: #30363d;
        --success-color: #2ea043; --danger-color: #f85149; --warning-color: #f0b429;
        --font-kurdish: 'Tahoma', sans-serif;
    }
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: var(--font-kurdish); background-color: var(--dark-bg); color: var(--primary-text); line-height: 1.6; }
    .container { width: 95%; max-width: 1400px; margin: auto; }

    /* Login Form */
    #login-container {
        display: flex; justify-content: center; align-items: center; height: 100vh;
    }
    .login-box {
        width: 100%; max-width: 400px; padding: 30px; background: var(--card-bg);
        border: 1px solid var(--border-color); border-radius: 10px;
    }
    .login-box h1 { text-align: center; margin-bottom: 25px; }
    .form-group { margin-bottom: 20px; }
    .form-group label { display: block; margin-bottom: 8px; }
    .form-group input {
        width: 100%; background: var(--dark-bg); border: 1px solid var(--border-color);
        color: var(--primary-text); padding: 12px; border-radius: 6px;
    }
    .form-group input:focus { border-color: var(--accent-color); outline: none; }
    .btn {
        width: 100%; padding: 12px; font-size: 1.1rem; color: white; border: none;
        border-radius: 8px; cursor: pointer; transition: opacity .3s;
    }
    .btn-primary { background-color: var(--accent-color); }
    .btn:hover { opacity: .9; }
    #login-error { color: var(--danger-color); text-align: center; margin-top: 15px; display: none; }

    /* Admin Panel Layout */
    #admin-container { display: none; }
    .admin-header {
        padding: 15px; background: var(--card-bg); border-bottom: 1px solid var(--border-color);
        display: flex; justify-content: space-between; align-items: center;
    }
    .admin-header h1 { font-size: 1.5rem; }
    .btn-danger { background-color: var(--danger-color); width: auto; padding: 8px 15px; font-size: 0.9rem; }
    .admin-body { display: flex; }
    .sidebar {
        width: 250px; background: var(--card-bg); padding: 20px 0; border-left: 1px solid var(--border-color);
        height: calc(100vh - 70px); overflow-y: auto;
    }
    .sidebar ul { list-style: none; }
    .sidebar li a {
        display: block; padding: 12px 20px; color: var(--secondary-text); text-decoration: none;
        transition: all .3s; border-right: 3px solid transparent;
    }
    .sidebar li a:hover, .sidebar li a.active {
        background: var(--dark-bg); color: var(--primary-text); border-right-color: var(--accent-color);
    }
    .main-content { flex-grow: 1; padding: 30px; height: calc(100vh - 70px); overflow-y: auto; }
    .main-content h2 { border-bottom: 2px solid var(--border-color); padding-bottom: 10px; margin-bottom: 20px; }
    .controls { margin-bottom: 20px; }
    .btn-success { background-color: var(--success-color); width: auto; padding: 10px 20px; font-size: 1rem; }

    /* Table Styles */
    .data-table { width: 100%; border-collapse: collapse; }
    .data-table th, .data-table td {
        padding: 12px; border: 1px solid var(--border-color); text-align: right;
    }
    .data-table th { background: var(--dark-bg); }
    .data-table td .actions { display: flex; gap: 10px; }
    .actions .btn { width: auto; padding: 5px 10px; font-size: 0.9rem; }
    .btn-warning { background-color: var(--warning-color); color: var(--dark-bg); }
    .data-table td.truncate { max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

    /* Modal Form */
    .modal-overlay {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background: rgba(0,0,0,0.8); display: none; justify-content: center; align-items: center; z-index: 1000;
    }
    .modal-content {
        width: 90%; max-width: 700px; background: var(--card-bg); border-radius: 10px;
        padding: 30px; max-height: 85vh; overflow-y: auto;
    }
    .modal-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
    .close-modal { font-size: 2rem; cursor: pointer; color: var(--secondary-text); }
    #modal-form .form-group textarea { min-height: 100px; resize: vertical; }

    #loading-indicator {
        position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);
        font-size: 1.2rem; color: var(--accent-color); display: none;
    }
    #main-content.loading #loading-indicator { display: block; }
</style>
</head>
<body>

<!-- Login View -->
<div id="login-container" class="container">
    <div class="login-box">
        <h1>چوونە ژوور (ئەدمین)</h1>
        <form id="login-form">
            <div class="form-group">
                <label for="email">ئیمێل</label>
                <input type="email" id="email" required>
            </div>
            <div class="form-group">
                <label for="password">پاسۆرد</label>
                <input type="password" id="password" required>
            </div>
            <button type="submit" class="btn btn-primary">چوونە ژوور</button>
            <p id="login-error"></p>
        </form>
    </div>
</div>

<!-- Admin Panel View -->
<div id="admin-container">
    <header class="admin-header">
        <h1>پەنێلا کۆنترۆلێ</h1>
        <div>
            <span id="admin-email" style="margin-left: 15px;"></span>
            <button id="logout-btn" class="btn btn-danger">دەرچوون</button>
        </div>
    </header>
    <div class="admin-body">
        <aside class="sidebar">
            <ul>
                <li><a href="#" class="nav-link" data-section="teachers">مامۆستایان</a></li>
                <li><a href="#" class="nav-link" data-section="levels">رێرەوا فێربوونێ</a></li>
                <li><a href="#" class="nav-link" data-section="generalLectures">وانەیێن گشتی</a></li>
                <li><a href="#" class="nav-link" data-section="fatwas">پرسیار و بەرسڤ</a></li>
                <li><a href="#" class="nav-link" data-section="hadiths">کتێبخانەیا حەدیسێ</a></li>
                <li><a href="#" class="nav-link" data-section="tafsir">تەفسیرا قورئانێ</a></li>
                <li><a href="#" class="nav-link" data-section="pirtukxane">پەرتوکخانە</a></li>
                <li><a href="#" class="nav-link" data-section="bookSales">فرۆتنا پەرتووکان</a></li>
                <li><a href="#" class="nav-link" unselectable="on" data-section="locations">خەریتە</a></li>
                <li><a href="#" class="nav-link" data-section="liveCourse">خولا ڕاستەوخۆ</a></li>
                <li><a href="#" class="nav-link" data-section="viewStatuses">ڕێکخستنا دیتنان</a></li>
            </ul>
        </aside>
        <main class="main-content" id="main-content">
            <h2>بەخێرهاتن بۆ پەنێلا کۆنترۆلێ</h2>
            <p>بەشەکێ ژ لیستا لایێ راستێ هەلبژێرە بۆ دەستپێکرنا ب رێڤەبرنێ.</p>
            <div id="loading-indicator">داتا دهێتە ئینان...</div>
        </main>
    </div>
</div>

<!-- Modal for Add/Edit -->
<div class="modal-overlay" id="form-modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modal-title"></h3>
            <span class="close-modal" onclick="closeModal()">&times;</span>
        </div>
        <form id="modal-form"></form>
    </div>
</div>

<!-- Firebase SDK -->
<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>

<script>
'use strict';

// === [ 1. Firebase دامەزراندن ] ===
const firebaseConfig = {
  apiKey: "AIzaSyDDi3HtFigGy3qFpFVhSATal3yzm7Z_dZA", // هەمان زانیاریێن فایلێ index.html
  authDomain: "projeislam.firebaseapp.com",
  projectId: "projeislam",
  storageBucket: "projeislam.appspot.com",
  messagingSenderId: "686343038831",
  appId: "1:686343038831:web:745161e7543b53aa0b6a9a",
  measurementId: "G-40PLKXX7GK"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();
const auth = firebase.auth();

// === [ 2. پێناسەکرنا ستوونێن هەر بەشەکێ ] ===
const sectionSchemas = {
    teachers: {
        name: { label: 'ناڤ', type: 'text' },
        profileimage: { label: 'لینکێ وێنەی', type: 'text' },
        bio: { label: 'ژیاننامە', type: 'textarea' },
        phone: { label: 'ژمارا تەلەفۆنێ', type: 'text' },
        social_youtube: { label: 'لینکێ یوتیوبی', type: 'text' },
        social_telegram: { label: 'لینکێ تێلێگرامی', type: 'text' },
        social_facebook: { label: 'لینکێ فەیسبوکی', type: 'text' },
    },
    levels: {
        level_id: { label: 'ژمارا ئاستی', type: 'number' },
        level_name: { label: 'ناڤێ ئاستی', type: 'text' },
        unlock_code: { label: 'کۆدێ ڤەکرنێ', type: 'text' },
        required_points: { label: 'خالێن پێتڤی', type: 'number' },
        course_id: { label: 'ID یا خولێ', type: 'text' },
        course_title: { label: 'ناڤێ خولێ', type: 'text' },
        teacher_id: { label: 'ID یا مامۆستای', type: 'text' },
        pdf_url: { label: 'لینکێ PDF', type: 'text' },
        memorization_pdf_url: { label: 'لینکێ PDF (ژبەرکرن)', type: 'text' },
        memorization_pdf_title: { label: 'نڤیسینا دوگمەیا ژبەرکرنێ', type: 'text' },
        videos: { label: 'لینکێن وانەیان', type: 'textarea', placeholder: 'فۆرکات: ناڤێ وانەیێ;لینکێ وانەیێ\nبۆ زێدەترکرنێ، \n`\n بکاربینە' }
    },
    generalLectures: {
        title: { label: 'ناڤێ زنجیرە وانەیێ', type: 'text' },
        teacherid: { label: 'ID یا مامۆستای', type: 'text' },
        category: { label: 'بابەت', type: 'text' },
        image: { label: 'لینکێ وێنەی', type: 'text' },
        pdfurl: { label: 'لینکێ PDF', type: 'text' },
        videos: { label: 'لینکێن وانەیان', type: 'textarea', placeholder: 'فۆرکات: ناڤێ وانەیێ;لینکێ وانەیێ\nبۆ زێدەترکرنێ، \n`\n بکاربینە' }
    },
    fatwas: {
        question: { label: 'پرسیار', type: 'textarea' },
        answer: { label: 'بەرسڤ', type: 'textarea' },
        teacherid: { label: 'ID یا مامۆستای', type: 'text' },
        category: { label: 'جۆر', type: 'text' },
        audio_url: { label: 'لینکێ دەنگی', type: 'text' }
    },
    hadiths: {
        text: { label: 'دەقێ حەدیسێ', type: 'textarea' },
        source: { label: 'ژێدەر', type: 'text' },
        narrator: { label: 'راوی', type: 'text' },
        category: { label: 'بابەت', type: 'text' },
        hadith_number: { label: 'ژمارا حەدیسێ', type: 'number' },
        grade: { label: 'پلە (صحيح, حسن, ضعيف)', type: 'text' },
        audio_url: { label: 'لینکێ دەنگی', type: 'text' }
    },
    tafsir: {
        surah_number: { label: 'ژمارا سورەتێ', type: 'number' },
        surah_name: { label: 'ناڤێ سورەتێ', type: 'text' },
        full_tafsir_text: { label: 'دەقێ تەفسیرێ', type: 'textarea' },
        ayah_count: { label: 'ژمارا ئایەتان', type: 'number' },
        revelation_type: { label: 'جۆر (مكي يان مدني)', type: 'text' },
        surah_audio_url: { label: 'لینکێ دەنگێ تەفسیرێ', type: 'text' }
    },
    pirtukxane: {
        title: { label: 'ناڤێ پەرتوکێ', type: 'text' },
        author: { label: 'نڤیسەر', type: 'text' },
        category: { label: 'جۆر', type: 'text' },
        coverimage: { label: 'لینکێ وێنێ بەرگی', type: 'text' },
        readurl: { label: 'لینکێ خواندنێ (PDF)', type: 'text' },
        downloadurl: { label: 'لینکێ داگرتنێ (PDF)', type: 'text' }
    },
    bookSales: {
        title: { label: 'ناڤێ پەرتوکێ', type: 'text' },
        author: { label: 'نڤیسەر', type: 'text' },
        coverimage: { label: 'لینکێ وێنێ بەرگی', type: 'text' },
        description: { label: 'کورتە', type: 'textarea' },
        price: { label: 'بها', type: 'text' },
        purchaselink: { label: 'لینکێ کرینێ', type: 'text' },
        isavailable: { label: 'بەردەستە؟ (بەڵێ/نەخێر)', type: 'text' }
    },
    locations: {
        coordinates: { label: 'Coordinates (lat,lng)', type: 'text' },
        locationname: { label: 'ناڤێ جهی', type: 'text' },
        teacherid: { label: 'ID یا مامۆستای', type: 'text' },
        lessontaught: { label: 'ناڤێ وانەیێ', type: 'text' },
        schedule: { label: 'دەم و کات', type: 'text' }
    },
    liveCourse: {
        title: { label: 'ناڤێ خولێ', type: 'text' },
        teacherid: { label: 'ID یا مامۆستای', type: 'text' },
        description: { label: 'شرۆڤەکرن', type: 'textarea' },
        nextsessiondate: { label: 'کاتێ جڤینا بهێت', type: 'text', placeholder: 'YYYY-MM-DDTHH:MM:SS' },
        prerequisites: { label: 'مەرجێن پێتڤی', type: 'textarea' },
        topics: { label: 'بابەتان (ب ` جودا بکە)', type: 'textarea' },
        schedule: { label: 'خشتێ دەوامێ (ب ` جودا بکە)', type: 'textarea' }
    },
    viewStatuses: {
        'levels-view': { label: 'ئاستەکان', type: 'text', placeholder: '0=چالاک, 1=نێزیک, 2=ئاریشە, 3=چاککرن, 7=ڤەشارتی, 8=قفل' },
        'waneyan-view': { label: 'وانە گشتیەکان', type: 'text' },
        'hadith-view': { label: 'حەدیسەکان', type: 'text' },
        'tafsir-view': { label: 'تەفسیر', type: 'text' },
        'pirtukxane-view': { label: 'پەرتوکخانە', type: 'text' },
        'book-sales-view': { label: 'فرۆشتنی پەرتوک', type: 'text' },
        'teachers-view': { label: 'مامۆستایان', type: 'text' },
        'fatwas-view': { label: 'فەتواکان', type: 'text' },
        'map-view': { label: 'نەخشە', type: 'text' },
        'live-view': { label: 'خولی راستەوخۆ', type: 'text' },
        'dashboard-view': { label: 'داشبۆرد', type: 'text' },
        'favorites-view': { label: 'دڵخوازەکان', type: 'text' },
        'seerah-view': { label: 'سیرە', type: 'text' },
        'adhkar-view': { label: 'زیکرەکان', type: 'text' },
        'fiqh-view': { label: 'فیقهـ', type: 'text' },
        'prayer-times-view': { label: 'کاتی بانگەکان', type: 'text' },
        'kids-view': { label: 'بەشی منداڵان', type: 'text' }
    }
};

// === [ 3. لۆجیکا گشتی و حالەت ] ===
let currentSection = null;
let currentDocId = null; // For editing

// DOM Elements
const loginContainer = document.getElementById('login-container');
const adminContainer = document.getElementById('admin-container');
const loginForm = document.getElementById('login-form');
const loginError = document.getElementById('login-error');
const logoutBtn = document.getElementById('logout-btn');
const mainContent = document.getElementById('main-content');
const navLinks = document.querySelectorAll('.nav-link');
const formModal = document.getElementById('form-modal');
const modalTitle = document.getElementById('modal-title');
const modalForm = document.getElementById('modal-form');

// === [ 4. فەنکشنێن Authentication ] ===
auth.onAuthStateChanged(user => {
    if (user) {
        loginContainer.style.display = 'none';
        adminContainer.style.display = 'block';
        document.getElementById('admin-email').textContent = user.email;
    } else {
        loginContainer.style.display = 'flex';
        adminContainer.style.display = 'none';
    }
});

loginForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    auth.signInWithEmailAndPassword(email, password)
        .catch(err => {
            loginError.textContent = 'ئیمێل یان پاسۆرد نە راستە.';
            loginError.style.display = 'block';
        });
});

logoutBtn.addEventListener('click', () => {
    auth.signOut();
});


// === [ 5. فەنکشنێن ب رێڤەبرنا ناڤەرۆکی ] ===
navLinks.forEach(link => {
    link.addEventListener('click', (e) => {
        e.preventDefault();
        navLinks.forEach(l => l.classList.remove('active'));
        e.target.classList.add('active');
        currentSection = e.target.dataset.section;
        loadSectionData(currentSection);
    });
});

async function loadSectionData(section) {
    mainContent.innerHTML = '<div id="loading-indicator">داتا دهێتە ئینان...</div>';
    mainContent.classList.add('loading');
    
    // Special handling for single-document collections
    if (section === 'liveCourse' || section === 'viewStatuses') {
        try {
            const docRef = db.collection('single_docs').doc(section);
            const doc = await docRef.get();
            renderSingleDocEditor(section, doc.exists ? { id: doc.id, ...doc.data() } : null);
        } catch (error) {
            console.error("Error loading single doc:", error);
            mainContent.innerHTML = `<p style="color:var(--danger-color);">چەوتیەک د ئینانا داتایان دا روویدا.</p>`;
        } finally {
            mainContent.classList.remove('loading');
        }
        return;
    }
    
    // Handling for regular collections
    try {
        const snapshot = await db.collection(section).get();
        const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        renderSectionTable(section, data);
    } catch (error) {
        console.error("Error loading collection:", error);
        mainContent.innerHTML = `<p style="color:var(--danger-color);">چەوتیەک د ئینانا داتایان دا روویدا.</p>`;
    } finally {
        mainContent.classList.remove('loading');
    }
}

function renderSectionTable(section, data) {
    const schema = sectionSchemas[section];
    const headers = Object.keys(schema);
    
    let tableHTML = `<h2>ب رێڤەبرنا بەشێ: ${section}</h2>
    <div class="controls"><button class="btn btn-success" onclick="openFormModal('${section}')">زێدەکرنا ئایتمەکێ نوو</button></div>
    <div style="overflow-x:auto;">
    <table class="data-table">
        <thead>
            <tr>
                <th>ID</th>
                ${headers.map(h => `<th>${schema[h].label}</th>`).join('')}
                <th>کردار</th>
            </tr>
        </thead>
        <tbody>
            ${data.map(item => `
                <tr>
                    <td>${item.id}</td>
                    ${headers.map(h => `<td class="truncate" title="${item[h] || ''}">${item[h] || ''}</td>`).join('')}
                    <td>
                        <div class="actions">
                            <button class="btn btn-warning" onclick="openFormModal('${section}', '${item.id}')">دەستکاری</button>
                            <button class="btn btn-danger" onclick="deleteItem('${section}', '${item.id}')">ژێبرن</button>
                        </div>
                    </td>
                </tr>
            `).join('')}
        </tbody>
    </table></div>`;
    
    mainContent.innerHTML = tableHTML;
}

function renderSingleDocEditor(section, data) {
    const schema = sectionSchemas[section];
    
    let formHTML = `<h2>ب رێڤەبرنا بەشێ: ${section}</h2>
        <form id="single-doc-form">`;
    
    for (const key in schema) {
        const field = schema[key];
        const value = data ? data[key] || '' : '';
        let inputHTML = '';
        const placeholder = field.placeholder ? `placeholder="${field.placeholder}"` : '';

        // Convert array to newline-separated string for textarea
        const processedValue = Array.isArray(value) ? value.join('\n`\n') : value;

        if (field.type === 'textarea') {
            inputHTML = `<textarea id="field-${key}" class="form-control" rows="5" ${placeholder}>${processedValue}</textarea>`;
        } else {
            inputHTML = `<input type="${field.type}" id="field-${key}" value="${processedValue}" class="form-control" ${placeholder}>`;
        }
        formHTML += `<div class="form-group">
            <label for="field-${key}">${field.label}</label>
            ${inputHTML}
        </div>`;
    }

    formHTML += `<button type="submit" class="btn btn-success">پاشکەفتکرن</button></form>`;
    mainContent.innerHTML = formHTML;

    document.getElementById('single-doc-form').addEventListener('submit', (e) => {
        e.preventDefault();
        saveSingleDoc(section);
    });
}


async function openFormModal(section, docId = null) {
    currentSection = section;
    currentDocId = docId;
    
    modalTitle.textContent = docId ? `دەستکاریکرنا ئایتمی` : `زێدەکرنا ئایتمەکێ نوو`;
    modalForm.innerHTML = '';
    
    const schema = sectionSchemas[section];
    let data = {};
    
    if (docId) {
        const doc = await db.collection(section).doc(docId).get();
        data = doc.data();
    }
    
    for (const key in schema) {
        const field = schema[key];
        const value = data[key] || '';
        const placeholder = field.placeholder ? `placeholder="${field.placeholder}"` : '';
        let inputHTML = '';

        if (field.type === 'textarea') {
            inputHTML = `<textarea id="field-${key}" class="form-control" rows="5" ${placeholder}>${value}</textarea>`;
        } else {
            inputHTML = `<input type="${field.type}" id="field-${key}" value="${value}" class="form-control" ${placeholder}>`;
        }
        
        modalForm.innerHTML += `<div class="form-group">
            <label for="field-${key}">${field.label}</label>
            ${inputHTML}
        </div>`;
    }
    
    modalForm.innerHTML += `<button type="submit" class="btn btn-primary">${docId ? 'نووژەنکرن' : 'زێدەکرن'}</button>`;
    formModal.style.display = 'flex';
}

function closeModal() {
    formModal.style.display = 'none';
}

modalForm.addEventListener('submit', (e) => {
    e.preventDefault();
    saveItem(currentSection, currentDocId);
});


async function saveItem(section, docId) {
    const schema = sectionSchemas[section];
    const dataToSave = {};
    
    for (const key in schema) {
        const value = document.getElementById(`field-${key}`).value;
        const fieldType = schema[key].type;

        if (fieldType === 'number') {
            dataToSave[key] = Number(value);
        } else {
            dataToSave[key] = value;
        }
    }
    
    try {
        if (docId) { // Update
            await db.collection(section).doc(docId).update(dataToSave);
            alert('ئایتم ب سەرکەفتی هاتە نووژەنکرن!');
        } else { // Add new
            await db.collection(section).add(dataToSave);
            alert('ئایتم ب سەرکەفتی هاتە زێدەکرن!');
        }
        closeModal();
        loadSectionData(section);
    } catch (error) {
        console.error("Error saving document: ", error);
        alert('چەوتیەک د پاشکەفتکرنێ دا روویدا.');
    }
}

async function saveSingleDoc(section) {
    const schema = sectionSchemas[section];
    const dataToSave = {};

    for (const key in schema) {
        const value = document.getElementById(`field-${key}`).value;
        
        // Check if value is meant to be an array (for fields like 'topics')
        if ((key === 'topics' || key === 'schedule') && section === 'liveCourse') {
            dataToSave[key] = value.split('\n`\n').map(item => item.trim()).filter(Boolean);
        } else {
            dataToSave[key] = value;
        }
    }

    try {
        await db.collection('single_docs').doc(section).set(dataToSave, { merge: true });
        alert('زانیاری ب سەرکەفتی هاتنە پاشکەفتکرن!');
    } catch (error) {
        console.error("Error saving single doc:", error);
        alert('چەوتیەک د پاشکەفتکرنێ دا روویدا.');
    }
}

async function deleteItem(section, docId) {
    if (confirm('تۆ پشتراستی دێ ڤی ئایتمی ژێبەی؟')) {
        try {
            await db.collection(section).doc(docId).delete();
            alert('ئایتم هاتە ژێبرن.');
            loadSectionData(section);
        } catch (error) {
            console.error("Error deleting document: ", error);
            alert('چەوتیەک د ژێبرنێ دا روویدا.');
        }
    }
}

// Close modal if clicked outside
window.onclick = function(event) {
    if (event.target == formModal) {
        closeModal();
    }
}

</script>
</body>
</html>
